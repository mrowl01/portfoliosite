{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\CRAYSY\\\\Desktop\\\\chrisnextsite\\\\pages\\\\projects.js\";\nimport React, { Component } from 'react';\nimport Layout from '../Components/Layout/Layout';\n\nvar Projects =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Projects, _Component);\n\n  function Projects() {\n    _classCallCheck(this, Projects);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Projects).apply(this, arguments));\n  }\n\n  _createClass(Projects, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 7\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"card\",\n        style: {\n          width: '18rem'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"/static/face.png\",\n        alt: \"...\",\n        style: {\n          height: '200px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        class: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, \"Face Detection\"), React.createElement(\"p\", {\n        class: \"card-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, \"backend: nodejs, docker, redis, postgres SQL\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }), \"frontend: React, Tachyons\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }), \"Uses API called clarify to detect faces. The API sends info to my front end from backend and puts a blue box around faces. It doesn't detect upside down faces. Redis keeps track of tokens for authentication, so user doesn't continuously login. Docker was used to make the set up fast and easy to work on the app from any of my computers. Bcrypt handles the passwords. The hashes are stored in my database and all this logic takes place in the backend. Learned a lot making this ! The live version doesn't have the most recent code deployed so check out the github if you get time.\"), React.createElement(\"a\", {\n        href: \"#\",\n        class: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"Live\"), React.createElement(\"a\", {\n        href: \"#\",\n        class: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"Github\"))));\n    }\n  }]);\n\n  return Projects;\n}(Component);\n\nexport default Projects;","map":{"version":3,"sources":["C:\\Users\\CRAYSY\\Desktop\\chrisnextsite\\pages\\projects.js"],"names":["React","Component","Layout","Projects","width","height"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,6BAAnB;;IAEMC,Q;;;;;;;;;;;;;6BACG;AACP,aACC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAK,QAAA,KAAK,EAAC,MAAX;AAAkB,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAE;AAAR,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,GAAG,EAAC,kBAAT;AAA4B,QAAA,GAAG,EAAC,KAAhC;AAAsC,QAAA,KAAK,EAAI;AAACC,UAAAA,MAAM,EAAC;AAAR,SAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAK,QAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,KAAK,EAAC,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE;AAAG,QAAA,KAAK,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFD,+BAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJD,ykBAFF,EAaE;AAAG,QAAA,IAAI,EAAC,GAAR;AAAY,QAAA,KAAK,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbF,EAcE;AAAG,QAAA,IAAI,EAAC,GAAR;AAAY,QAAA,KAAK,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdF,CAFF,CADD,CADD;AAuBA;;;;EAzBqBJ,S;;AA4BvB,eAAeE,QAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport Layout from '../Components/Layout/Layout'\r\n\r\nclass Projects extends Component{\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<Layout>\r\n\t\t\t\t<div class=\"card\" style={{width: '18rem'  }}>\r\n\t\t\t\t  <img src=\"/static/face.png\" alt=\"...\" style = {{height:'200px'}} />\r\n\t\t\t\t  <div class=\"card-body\">\r\n\t\t\t\t    <h5 class=\"card-title\">Face Detection</h5>\r\n\t\t\t\t    <p class=\"card-text\">\r\n\t\t\t\t    \tbackend: nodejs, docker, redis, postgres SQL\r\n\t\t\t\t    \t<br/>\r\n\t\t\t\t    \tfrontend: React, Tachyons  \r\n\t\t\t\t    \t<br/>\r\n\t\t\t\t    \tUses API called clarify to detect faces. The API sends info to my front end from backend and puts a blue box around faces.\r\n\t\t\t\t    \tIt doesn't detect upside down faces. Redis keeps track of tokens for authentication, so user doesn't continuously login.\r\n\t\t\t\t    \tDocker was used to make the set up fast and easy to work on the app from any of my computers. Bcrypt handles the passwords.\r\n\t\t\t\t \t\tThe hashes are stored in my database and all this logic takes place in the backend. Learned a lot making this ! The live\r\n\t\t\t\t \t\tversion doesn't have the most recent code deployed so check out the github if you get time.\r\n\t\t\t\t    </p>\r\n\t\t\t\t    <a href=\"#\" class=\"btn btn-primary\">Live</a>\r\n\t\t\t\t    <a href=\"#\" class=\"btn btn-primary\">Github</a>\r\n\t\t\t\t  </div>\r\n\t\t\t\t</div>\r\n\t\t\t</Layout>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Projects; "]},"metadata":{},"sourceType":"module"}